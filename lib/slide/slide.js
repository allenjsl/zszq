define(function (b, a, c) {
    function d(q, i) {
        var j = function () { }; var y = function (G) { setTimeout(G || j, 0) }; var F = { addEventListener: !!window.addEventListener, touch: ("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch, transitions: (function (G) { var I = ["transitionProperty", "WebkitTransition", "MozTransition", "OTransition", "msTransition"]; for (var H in I) { if (G.style[I[H]] !== undefined) { return true } } return false })(document.createElement("swipe")) }; if (!q) { return } var g = q.children[0]; var w, h, v, k; i = i || {}; var o = parseInt(i.startSlide, 10) || 0; var z = i.speed || 100; i.continuous = i.continuous !== undefined ? i.continuous : true; function r() { w = g.children; k = w.length; if (w.length < 2) { i.continuous = false } if (F.transitions && i.continuous && w.length < 3) { g.appendChild(w[0].cloneNode(true)); g.appendChild(g.children[1].cloneNode(true)); w = g.children } h = new Array(w.length); v = q.getBoundingClientRect().width || q.offsetWidth; g.style.width = (w.length * v) + "px"; var H = w.length; while (H--) { var G = w[H]; G.style.width = v + "px"; G.setAttribute("data-index", H); if (F.transitions) { G.style.left = (H * -v) + "px"; u(H, o > H ? -v : (o < H ? v : 0), 0) } } if (i.continuous && F.transitions) { u(m(o - 1), -v, 0); u(m(o + 1), v, 0) } if (!F.transitions) { g.style.left = (o * -v) + "px" } q.style.visibility = "visible" } function s() { if (i.continuous) { e(o - 1) } else { if (o) { e(o - 1) } } } function t() { if (i.continuous) { e(o + 1) } else { if (o < w.length - 1) { e(o + 1) } } } function m(G) { return (w.length + (G % w.length)) % w.length } function e(K, H) { if (o == K) { return } if (F.transitions) { var J = Math.abs(o - K) / (o - K); if (i.continuous) { var G = J; J = -h[m(K)] / v; if (J !== G) { K = -J * w.length + K } } var I = Math.abs(o - K) - 1; while (I--) { u(m((K > o ? K : o) - I - 1), v * J, 0) } K = m(K); u(o, v * J, H || z); u(K, 0, H || z); if (i.continuous) { u(m(K - J), -(v * J), 0) } } else { K = m(K); n(o * -v, K * -v, H || z) } o = K; y(i.callback && i.callback(o, w[o])) } function u(G, I, H) { p(G, I, H); h[G] = I } function p(H, K, J) { var G = w[H]; var I = G && G.style; if (!I) { return } I.webkitTransitionDuration = I.MozTransitionDuration = I.msTransitionDuration = I.OTransitionDuration = I.transitionDuration = J + "ms"; I.webkitTransform = "translate(" + K + "px,0)" + "translateZ(0)"; I.msTransform = I.MozTransform = I.OTransform = "translateX(" + K + "px)" } function n(K, J, G) { if (!G) { g.style.left = J + "px"; return } var I = +new Date; var H = setInterval(function () { var L = +new Date - I; if (L > G) { g.style.left = J + "px"; if (E) { B() } i.transitionEnd && i.transitionEnd.call(event, o, w[o]); clearInterval(H); return } g.style.left = (((J - K) * (Math.floor((L / G) * 100) / 100)) + K) + "px" }, 4) } var E = i.auto || 0; var A; function B() { A = setTimeout(t, E) } function x() { E = 0; clearTimeout(A) } var l = {}; var C = {}; var D; var f = { handleEvent: function (G) { switch (G.type) { case "touchstart": this.start(G); break; case "touchmove": this.move(G); break; case "touchend": y(this.end(G)); break; case "webkitTransitionEnd": case "msTransitionEnd": case "oTransitionEnd": case "otransitionend": case "transitionend": y(this.transitionEnd(G)); break; case "resize": y(r.call()); break } if (i.stopPropagation) { G.stopPropagation() } }, start: function (G) { var H = G.touches[0]; l = { x: H.pageX, y: H.pageY, time: +new Date }; D = undefined; C = {}; g.addEventListener("touchmove", this, false); g.addEventListener("touchend", this, false) }, move: function (G) { if (G.touches.length > 1 || G.scale && G.scale !== 1) { return } if (i.disableScroll) { G.preventDefault() } var H = G.touches[0]; C = { x: H.pageX - l.x, y: H.pageY - l.y }; if (typeof D == "undefined") { D = !!(D || Math.abs(C.x) < Math.abs(C.y)) } if (!D) { G.preventDefault(); x(); if (i.continuous) { p(m(o - 1), C.x + h[m(o - 1)], 0); p(o, C.x + h[o], 0); p(m(o + 1), C.x + h[m(o + 1)], 0) } else { C.x = C.x / ((!o && C.x > 0 || o == w.length - 1 && C.x < 0) ? (Math.abs(C.x) / v + 1) : 1); p(o - 1, C.x + h[o - 1], 0); p(o, C.x + h[o], 0); p(o + 1, C.x + h[o + 1], 0) } } }, end: function (I) { var K = +new Date - l.time; var H = Number(K) < 250 && Math.abs(C.x) > 20 || Math.abs(C.x) > v / 2; var G = !o && C.x > 0 || o == w.length - 1 && C.x < 0; if (i.continuous) { G = false } var J = C.x < 0; if (!D) { if (H && !G) { if (J) { if (i.continuous) { u(m(o - 1), -v, 0); u(m(o + 2), v, 0) } else { u(o - 1, -v, 0) } u(o, h[o] - v, z); u(m(o + 1), h[m(o + 1)] - v, z); o = m(o + 1) } else { if (i.continuous) { u(m(o + 1), v, 0); u(m(o - 2), -v, 0) } else { u(o + 1, v, 0) } u(o, h[o] + v, z); u(m(o - 1), h[m(o - 1)] + v, z); o = m(o - 1) } i.callback && i.callback(o, w[o]) } else { if (i.continuous) { u(m(o - 1), -v, z); u(o, 0, z); u(m(o + 1), v, z) } else { u(o - 1, -v, z); u(o, 0, z); u(o + 1, v, z) } } } g.removeEventListener("touchmove", f, false); g.removeEventListener("touchend", f, false) }, transitionEnd: function (G) { E = i.auto || 0; if (parseInt(G.target.getAttribute("data-index"), 10) == o) { if (E) { B() } i.transitionEnd && i.transitionEnd.call(G, o, w[o]) } } }; r(); if (E) { B() } if (F.addEventListener) { if (F.touch) { g.addEventListener("touchstart", f, false) } if (F.transitions) { g.addEventListener("webkitTransitionEnd", f, false); g.addEventListener("msTransitionEnd", f, false); g.addEventListener("oTransitionEnd", f, false); g.addEventListener("otransitionend", f, false); g.addEventListener("transitionend", f, false) } window.addEventListener("resize", f, false) } else { window.onresize = function () { r() } } return {
            setup: function () { r() }, slide: function (H, G) { x(); e(H, G) }, prev: function () { x(); s() }, next: function () { x(); t() }, getPos: function () { alert(o); return o }, getNumSlides: function () { return k }, kill: function () {
                x(); g.style.width = "auto"; g.style.left = 0; var H = w.length; while (H--) {
                    var G = w[H]; G.style.width = "100%";
                    G.style.left = 0; if (F.transitions) { p(H, 0, 0) }
                } if (F.addEventListener) { g.removeEventListener("touchstart", f, false); g.removeEventListener("webkitTransitionEnd", f, false); g.removeEventListener("msTransitionEnd", f, false); g.removeEventListener("oTransitionEnd", f, false); g.removeEventListener("otransitionend", f, false); g.removeEventListener("transitionend", f, false); window.removeEventListener("resize", f, false) } else { window.onresize = null }
            }
        }
    } c.exports = d
});